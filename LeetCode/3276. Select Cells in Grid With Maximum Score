/*
    Problem: 3276. Select Cells in Grid With Maximum Score (https://leetcode.com/problems/select-cells-in-grid-with-maximum-score/description/)

    You are given a 2D matrix grid consisting of positive integers.

    You have to select one or more cells from the matrix such that the following conditions are satisfied:

    No two selected cells are in the same row of the matrix.
    The values in the set of selected cells are unique.
    Your score will be the sum of the values of the selected cells.

    Return the maximum score you can achieve.


    Example 1:

    Input: grid = [[1,2,3],[4,3,2],[1,1,1]]

    Output: 8

    Example 2:

    Input: grid = [[8,7,6],[8,3,2]]

    Output: 15
*/


/*
Approach: Dynamic Programming with Bitmasks
*/
class Solution {
    int dp[101][(1<<11)];
    int solve(vector<vector<int>>& grid, int value, int mask) {
        if((1<<grid.size())-1==mask || value>100) {
                return 0;
        }

        if(dp[value][mask]!=-1) {
            return dp[value][mask];
        }

        int ans = INT_MIN;
        ans = solve(grid, value +1, mask);

        for(int row=0;  row<grid.size(); row++) {
            if(!((mask>>row)&1)) {
                for (int col=0; col<grid[0].size(); col++) {
                    if(grid[row][col]!=value) {
                        continue;
                    }
                    int newMask = (mask | (1<<row));
                    ans = max(ans, grid[row][col] + solve(grid, value+1, newMask));
                }
            }
        }  
        return dp[value][mask] = ans;
    }
public:
    int maxScore(vector<vector<int>>& grid) {
        memset(dp, -1, sizeof(dp));
        return solve(grid, 1, 0);
    }
};